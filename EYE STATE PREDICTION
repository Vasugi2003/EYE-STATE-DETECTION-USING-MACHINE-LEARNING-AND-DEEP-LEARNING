import numpy as np
import pandas as pd
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

#enter your path in ' '
data = pd.read_csv('/content/EYESTATE.csv')
data.head()

X = data.drop('EYE DETECTION', axis=1).values
y = data['EYE DETECTION'].values
scaler = StandardScaler()
X = scaler.fit_transform(X)

#train test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#creating model
model = tf.keras.Sequential([
    tf.keras.layers.LSTM(units=64, return_sequences=True, input_shape=(X_train.shape[1], 1)),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.LSTM(units=32),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(units=1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(X_train.reshape(X_train.shape[0], X_train.shape[1], 1), y_train, epochs=70, batch_size=64)

loss, accuracy = model.evaluate(X_test.reshape(X_test.shape[0], X_test.shape[1], 1), y_test)
print('Accuracy: {:.2f}%'.format(accuracy * 100))
